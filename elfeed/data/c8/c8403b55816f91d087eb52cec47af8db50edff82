<!-- SC_OFF --><div class="md"><p>I&#39;m developing a small application which will work along with an SQL Server instance. Given the very early stages of development, the database schema isn&#39;t yet set in stone and it is subject to frequent changes.</p> <p>&#x200B;</p> <p>My assumption of needing structs to match the database fields and tables is due to the fact that every project I&#39;ve seen so far is built like this (regarding application interaction with a database).</p> <p>I can see why structs are useful, like unmarshalling the `rows` results from a query into the struct to later manipulate the data but is it really the only method? Are there KISS strategies to handle query results?</p> <p>&#x200B;</p> <p>I would really like to not having to change my code every week. I was also thinking (to get ahead in the project) to somehow fake the query results so that I can proceed in defining several other aspects of the application which are not data-driven but rather <em>schema-driven.</em></p> <p>&#x200B;</p> <p>What is the industry standard to handle similar projects? Suggestions?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href="https://www.reddit.com/user/Maxiride"> /u/Maxiride </a> <br/> <span><a href="https://www.reddit.com/r/golang/comments/bwcp13/is_it_possible_to_automagically_create_structs/">[link]</a></span> &#32; <span><a href="https://www.reddit.com/r/golang/comments/bwcp13/is_it_possible_to_automagically_create_structs/">[comments]</a></span>