<p pid="2">Reactive apps are non-blocking, allow you to scale better, and tend to be more efficient if you’re dealing with lots of streaming data. Reactive systems endorse asynchronous I/O which allows processing to continue without having to wait for a step to finish which frees the client to do other things while waiting. </p>
<p pid="3">When building a reactive app, you need it to be reactive all the way down to your database or you’ll be disappointed. In this tutorial, you’ll learn how to use Spring Boot, Spring WebFlux, and Spring Data to create a reactive web service that talks to a NoSQL database backend (MongoDB, in this case).</p>