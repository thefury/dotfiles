<p>Lift-and-shift is the process of migrating a workload from on premise to AWS with little or no modification. A lift-and-shift is a common route for enterprises to move to the cloud, and can be a transitionary state to a more cloud native approach. This is the second blog post in a three-part series which investigates how to optimize a lift-and-shift workload. The first post is about <a href="https://aws.amazon.com/blogs/architecture/optimizing-a-lift-and-shift-for-performance/">performance</a> and the third covers <a href="https://aws.amazon.com/blogs/architecture/optimizing-a-lift-and-shift-for-security/">security</a>.</p> 
<p>A key concern that many customers have with a lift-and-shift is cost. If you move an application as is &nbsp;from on-prem to AWS, is there any possibility for meaningful cost savings? By employing AWS services, in lieu of self-managed EC2 instances, and by leveraging cloud capability such as auto scaling, there is potential for significant cost savings. In this blog post, we will discuss a number of AWS services and solutions that you can leverage with minimal or no change to your application codebase in order to significantly reduce management costs and overall Total Cost of Ownership (TCO).</p> 
<h2>Automate</h2> 
<p>Even if you can’t modify your application, you can change the way you deploy your application. The adopting-an-infrastructure-as-code approach can vastly improve the ease of management of your application, thereby reducing cost. By templating your application through Amazon CloudFormation, Amazon OpsWorks, or Open Source tools you can make deploying and managing your workloads a simple and repeatable process.</p> 
<p>As part of the lift-and-shift process, rationalizing the workload into a set of templates enables less time to spent in the future deploying and modifying the workload. It enables the easy creation of dev/test environments, facilitates blue-green testing, opens up options for DR, and gives the option to roll back in the event of error. Automation is the single step which is most conductive to improving ease of management.</p> 
<h2>Reserved Instances and Spot Instances</h2> 
<p>A first initial consideration around cost should be the purchasing model for any EC2 instances. Reserved Instances (RIs) represent a 1-year or 3-year commitment to EC2 instances and can enable up to 75% cost reduction (over on demand) for steady state EC2 workloads. They are ideal for 24/7 workloads that must be continually in operation. An application requires no modification to make use of RIs.</p> 
<p>An alternative purchasing model is EC2 spot. Spot instances offer unused capacity available at a significant discount – up to 90%. Spot instances receive a two-minute warning when the capacity is required back by EC2 and can be suspended and resumed. Workloads which are architected for batch runs – such as analytics and big data workloads – often require little or no modification to make use of spot instances. Other burstable workloads such as web apps may require some modification around how they are deployed.</p> 
<p>A final alternative is on-demand. For workloads that are not running in perpetuity, on-demand is ideal. Workloads can be deployed, used for as long as required, and then terminated. By leveraging some simple automation (such as AWS Lambda and CloudWatch alarms), you can schedule workloads to start and stop at the open and close of business (or at other meaningful intervals). This typically requires no modification to the application itself. For workloads that are not 24/7 steady state, this can provide greater cost effectiveness compared to RIs and more certainty and ease of use when compared to spot.</p> 
<h2>Amazon FSx for Windows File Server</h2> 
<p><a href="https://aws.amazon.com/fsx/windows/">Amazon FSx for Windows File Server</a> provides a fully managed Windows filesystem that has full compatibility with SMB and DFS and full AD integration. Amazon FSx is an ideal choice for lift-and-shift architectures as it requires no modification to the application codebase in order to enable compatibility. Windows based applications can continue to leverage standard, Windows-native protocols to access storage with Amazon FSx. It enables users to avoid having to deploy and manage their own fileservers – eliminating the need for patching, automating, and managing EC2 instances. Moreover, it’s easy to scale and minimize costs, since Amazon FSx offers a pay-as-you-go pricing model.</p> 
<h2>Amazon EFS</h2> 
<p><a href="https://aws.amazon.com/efs/">Amazon Elastic File System (EFS)</a> provides high performance, highly available multi-attach storage via NFS. EFS offers a drop-in replacement for existing NFS deployments. This is ideal for a range of Linux and Unix use cases as well as cross-platform solutions such as Enterprise Java applications. EFS eliminates the need to manage NFS infrastructure and simplifies storage concerns. Moreover, EFS provides high availability out of the box, which helps to reduce single points of failure and avoids the need to manually configure storage replication. Much like Amazon FSx, EFS enables customers to realize cost improvements by moving to a pay-as-you-go pricing model and requires no modification of the application.</p> 
<h2>Amazon MQ</h2> 
<p><a href="https://aws.amazon.com/amazon-mq/">Amazon MQ</a> is a managed message broker service that provides compatibility with JMS, AMQP, MQTT, OpenWire, and STOMP. These are amongst the most extensively used middleware and messaging protocols and are a key foundation of enterprise applications. Rather than having to manually maintain a message broker, Amazon MQ provides a performant, highly available managed message broker service that is compatible with existing applications.</p> 
<p>To use Amazon MQ without any modification, you can adapt applications that leverage a standard messaging protocol. In most cases, all you need to do is update the application’s MQ endpoint in its configuration. Subsequently, the Amazon MQ service handles the heavy lifting of operating a message broker, configuring HA, fault detection, failure recovery, software updates, and so forth. This offers a simple option for reducing management overhead and improving the reliability of a lift-and-shift architecture. What’s more is that applications can migrate to Amazon MQ <a href="https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/amazon-mq-migrating-no-service-interruption.html">without the need for any downtime</a>, making this an easy and effective way to improve a lift-and-shift.</p> 
<p>You can also use Amazon MQ to integrate legacy applications with modern serverless applications. <a href="https://aws.amazon.com/blogs/compute/invoking-aws-lambda-from-amazon-mq/">Lambda functions can subscribe to MQ topics</a> and trigger serverless workflows, enabling compatibility between legacy and new workloads.</p> 
<div id="attachment_974" style="width: 759px" class="wp-caption alignnone">
 <img class=" wp-image-974" src="https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2018/12/21/lift-shit-cost-1.png" alt="Integrating Lift-and-Shift Workloads with Lambda via Amazon MQ" width="749" height="501" />
 <p class="wp-caption-text">Figure 1: Integrating Lift-and-Shift Workloads with Lambda via Amazon MQ</p>
</div> 
<h2>Amazon Managed Streaming Kafka</h2> 
<p>Lift-and-shift workloads which include a streaming data component are often built around Apache Kafka. There is a certain amount of complexity involved in operating a Kafka cluster which incurs management and operational expense. Amazon Kinesis is a managed alternative to Apache Kafka, but it is not a drop-in replacement. At re:Invent 2018, we announced the launch of <a href="https://aws.amazon.com/msk/">Amazon Managed Streaming Kafka (MSK)</a> in public preview. MSK provides a managed Kafka deployment with pay-as-you-go pricing and an acts as a drop-in replacement in existing Kafka workloads. MSK can help reduce management costs and improve cost efficiency and is ideal for lift-and-shift workloads.</p> 
<h2>Leveraging S3 for Static Web Hosting</h2> 
<p>A significant portion of any web application is static content. This includes videos, image, text, and other content that changes seldom, if ever. In many lift-and-shifted applications, web servers are migrated to EC2 instances and host all content – static and dynamic. Hosting static content from an EC2 instance incurs a number of costs including the instance, EBS volumes, and likely, a load balancer. By moving static content to S3, you can significantly reduce the amount of compute required to host your web applications. In many cases, this change is non-disruptive and can be done at the DNS or CDN layer, requiring no change to your application.</p> 
<div id="attachment_973" style="width: 757px" class="wp-caption alignnone">
 <img class=" wp-image-973" src="https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2018/12/21/lift-shift-cost-2.png" alt="Reducing Web Hosting Costs with S3 Static Web Hosting" width="747" height="500" />
 <p class="wp-caption-text">Figure 2: Reducing Web Hosting Costs with S3 Static Web Hosting</p>
</div> 
<h2>Conclusion</h2> 
<p>There are numerous opportunities for reducing the cost of a lift-and-shift. Without any modification to the application, lift-and-shift workloads can benefit from cloud-native features. By using AWS services and features, you can significantly reduce the undifferentiated heavy lifting inherent in on-prem workloads and reduce resources and management overheads.</p> 
<h3>About the author</h3> 
<h3><img class="alignleft size-thumbnail wp-image-1008" src="https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2018/12/28/Ohoto-jonsward-150x150.jpg" alt="Jonathan Shapiro-Ward" width="150" height="150" /></h3> 
<p>Dr. Jonathan Shapiro-Ward is an AWS Solutions Architect based in Toronto. He helps customers across Canada to transform their businesses and build industry leading cloud solutions. He has a background in distributed systems and big data and holds a PhD from the University of St Andrews.</p>