<p>Many organizations begin their cloud journey with a lift-and-shift of applications from on-premise to AWS. This approach involves migrating software deployments with little, or no, modification. A <a href="https://aws.amazon.com/blogs/enterprise-strategy/cloud-native-or-lift-and-shift/">lift-and-shift avoids a potentially expensive application rewrite</a> but can result in a less optimal workload than a cloud native solution. For many organizations, a lift-and-shift is a transitional stage to an eventual cloud native solution, but there are some applications that can’t feasibly be made cloud-native such as legacy systems or proprietary third-party solutions. There are still <a href="https://aws.amazon.com/blogs/enterprise-strategy/4-reasons-to-re-consider-lift-and-shift-to-the-cloud/">clear benefits of moving these workloads to AWS</a>, but how can they be best optimized?</p> 
<p>In this blog series post, we’ll look at different approaches for optimizing a black box lift-and-shift. We’ll consider how we can significantly improve a lift-and-shift application across three perspectives: performance, <a href="https://aws.amazon.com/blogs/architecture/optimizing-a-lift-and-shift-for-cost/">cost</a>, and <a href="https://aws.amazon.com/blogs/architecture/optimizing-a-lift-and-shift-for-security/">security</a>. We’ll show that without modifying the application we can integrate services and features that will make a lift-and-shift workload cheaper, faster, more secure, and more reliable. In this first blog, we’ll investigate how a lift-and-shift workload can have improved performance through leveraging AWS features and services.</p> 
<p>Performance gains are often a motivating factor behind a cloud migration. On-premise systems may suffer from performance bottlenecks owing to legacy infrastructure or through capacity issues. When performing a lift-and-shift, how can you improve performance? Cloud computing is famous for enabling horizontally scalable architectures but many legacy applications don’t support this mode of operation. Traditional business applications are often architected around a fixed number of servers and are unable to take advantage of horizontal scalability. Even if a lift-and-shift can’t make use of auto scaling groups and horizontal scalability, you can achieve significant performance gains by moving to AWS.</p> 
<h2>Scaling Up</h2> 
<p>The easiest alternative to scale up to compute is vertical scalability. AWS provides the widest selection of virtual machine types and the largest machine types. Instances range from small, burstable t3 instances series all the way to memory optimized x1 series. By <a href="https://aws.amazon.com/blogs/aws/choosing-the-right-ec2-instance-type-for-your-application/">leveraging the appropriate instance</a>, lift-and-shifts can benefit from significant performance. Depending on your workload, you can also swap out the instances used to power your workload to better meet demand. For example, on days in which you anticipate high load you could move to more powerful instances. This could be easily automated via a Lambda function.</p> 
<p>The <a href="https://aws.amazon.com/ec2/instance-types/x1/">x1 family of instances</a> offers considerable CPU, memory, storage, and network performance and can be used to accelerate applications that are designed to maximize single machine performance. The x1e.32xlarge instance, for example, offers 128 vCPUs, 4TB RAM, and 14,000 Mbps EBS bandwidth. This instance is ideal for high performance in-memory workloads such as real time financial risk processing or SAP Hana.</p> 
<p>Through selecting the appropriate instance types and scaling that instance up and down to meet demand, you can achieve superior performance and cost effectiveness compared to running a single static instance. This affords lift-and-shift workloads far greater efficiency that their on-prem counterparts.</p> 
<h2>Placement Groups and C5n Instances</h2> 
<p><a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html#placement-groups-spread">EC2 Placement groups</a> determine how you deploy instances to underlying hardware. One can either choose to cluster instances into a low latency group within a single AZ or spread instances across distinct underlying hardware. Both types of placement groups are useful for optimizing lift-and-shifts.</p> 
<p>The spread placement group is valuable in applications that rely on a small number of critical instances. If you can’t modify your application &nbsp;to leverage auto scaling, liveness probes, or failover, then spread placement groups can help reduce the risk of simultaneous failure while improving the overall reliability of the application.</p> 
<p>Cluster placement groups help improve network QoS between instances. When used in conjunction with enhanced networking, cluster placement groups help to ensure low latency, high throughput, and high network packets per second. This is beneficial for chatty applications and any application that leveraged physical co-location for performance on-prem.</p> 
<p>There is no additional charge for using placement groups.</p> 
<p>You can extend this approach further with <a href="https://aws.amazon.com/blogs/aws/new-c5n-instances-with-100-gbps-networking/">C5n instances</a>. These instances offer 100Gbps networking and can be used in placement group for the most demanding networking intensive workloads. Using both placement groups and the C5n instances require no modification to your application, only to how it is deployed – making it a strong solution for providing network performance to lift-and-shift workloads.</p> 
<h2>Leverage Tiered Storage to Optimize for Price and Performance</h2> 
<p>AWS offers a range of storage options, each with its own performance characteristics and price point. Through leveraging a combination of storage types, lift-and-shifts can achieve the performance and availability requirements in a price effective manner. The range of storage options include:</p> 
<ul> 
 <li>&nbsp;<a href="https://aws.amazon.com/ebs/">Amazon EBS</a></li> 
 <li><a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html">The EC2 Instance Store</a></li> 
 <li><a href="https://aws.amazon.com/s3/">Amazon S3</a></li> 
 <li><a href="https://aws.amazon.com/glacier">Amazon Glacier</a></li> 
</ul> 
<p>Amazon EBS is the most common storage service involved with lift-and-shifts. EBS provides block storage that can be attached to EC2 instances and formatted with a typical file system such as NTFS or ext4. There are several different EBS volume types, ranging from inexpensive magnetic storage to highly performant provisioned IOPS SSDs. There are also storage-optimized instances that offer <a href="https://aws.amazon.com/blogs/compute/improving-application-performance-and-reducing-costs-with-amazon-ebs-optimized-instance-burst-capability/">high performance EBS access and local NVMe storage</a>. By utilizing the appropriate type of EBS volume and instance, a compromise of performance and price can be achieved. RAID offers a further option to optimize EBS. EBS utilizes RAID 1 by default, providing replication at no additional cost, however an EC2 instance can apply other RAID levels. If you require EBS performance or capacity beyond what a single volume can provide, you can stripe multiple volumes together in a RAID0 configuration, within a single EC2 instance. over a number of EBS volumes in order to improve storage performance.</p> 
<p>In addition to EBS, EC2 instances applications can utilize the EC2 instance storage, The instance store which provides ephemeral direct attached temporary block-level storage that is physically attached to EC2 instances. The instance store is included with the EC2 instance and provides a facility to store non-persistent data. This makes it EC2 instance storage is ideal for temporary data that changes frequently or for data that is replicated across multiple EC2 instances. Newer instance types including the such as C5d and P3d are equipped with local NVMe storage which can support extremely IO intensive, low latency workloads. files that an application produces, which require performant storage. Both EBS and the instance storage are exposed to the EC2 instance as block level devices, and the OS can use its native management tools to format and mount these volumes as per a traditional disk – requiring no significant departure from the on-premises configuration.</p> 
<p>Not all workloads require high performance, locally attached storage. In many cases finding a compromise between price and performance is top priority. Amazon S3 provides highly durable object storage at a significantly lower price point than block storage. S3 is ideal for a large number of use cases including content distribution, data ingestion, analytics, and backup. S3, however, is accessible via a RESTful API and does not provide conventional file system block-storage semantics as per EBS. This may make S3 less viable for applications that you can’t easily modify, but there are still options for using S3 in such a scenario.</p> 
<p>One option for leveraging S3 is by using AWS Storage Gateway. Storage Gateway is a virtual appliance than can be run on-premises or on EC2. The Storage Gateway appliance can operate in three configurations: file gateway, volume gateway and tape gateway. File gateway provides an NFS or SMB interface, Volume Gateway provides an iSCSI interface, and Tape Gateway provides an iSCSI virtual tape library interface. This allows files, volumes, and tapes to be exposed to an application host through conventional protocols with the Storage Gateway appliance persisting data to S3. This allows an application to be agnostic to S3 while leveraging typical enterprise storage protocols.</p> 
<div id="attachment_975" style="width: 609px" class="wp-caption alignnone">
 <img class=" wp-image-975" src="https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2018/12/21/lift-shit-perf-1.png" alt="Using S3 Storage via Storage Gateway" width="599" height="502" />
 <p class="wp-caption-text">Figure 1: Using S3 Storage via Storage Gateway</p>
</div> 
<h2>Conclusion</h2> 
<p>A lift-and-shift can achieve significant performance gains on AWS by making use of a range of instance types, storage services, and other features. Even without any modification to the application, lift-and-shift workloads can benefit from cutting edge compute, network, and IO which can help realize significant, meaningful performance gains.</p> 
<h3>About the author</h3> 
<h3><img class="size-thumbnail wp-image-1008 alignleft" src="https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2018/12/28/Ohoto-jonsward-150x150.jpg" alt="Jonathan Shapiro-Ward" width="150" height="150" /></h3> 
<p>Dr. Jonathan Shapiro-Ward is an AWS Solutions Architect based in Toronto. He helps customers across Canada to transform their businesses and build industry leading cloud solutions. He has a background in distributed systems and big data and holds a PhD from the University of St Andrews.</p>