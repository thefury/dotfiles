<!-- SC_OFF --><div class="md"><p>I was working on a way to encrypt some text, and while I think I implemented a &quot;secure&quot; version, I&#39;m not sure if I understood the examples properly. I was hoping someone who has more experience can speak to whether this is being done properly?</p> <pre><code>// EncryptBytes() takes a slice of bytes and a string passphrase and returns an encrypted // slice of bytes func EncryptBytes(btData []byte, strPassKey string) []byte { block, err := aes.NewCipher([]byte(strPassKey)) if err != nil { panic(err) } gcm, err := cipher.NewGCM(block) if err != nil { panic(err) } nonce := make([]byte, gcm.NonceSize()) if _, err = io.ReadFull(cryptrand.Reader, nonce); err != nil { panic(err) } btCiphertext := gcm.Seal(nonce, nonce, btData, nil) return btCiphertext } </code></pre> </div><!-- SC_ON --> &#32; submitted by &#32; <a href="https://www.reddit.com/user/bsilver"> /u/bsilver </a> <br/> <span><a href="https://www.reddit.com/r/golang/comments/bwg6ah/is_this_encryption_implemented_properly/">[link]</a></span> &#32; <span><a href="https://www.reddit.com/r/golang/comments/bwg6ah/is_this_encryption_implemented_properly/">[comments]</a></span>