<p><a href="https://aws.amazon.com/codebuild/">AWS CodeBuild</a> now supports using a Docker image that is stored in a private registry as your runtime environment. Previously, the service supported the use of Docker images from public Docker Hub or Amazon ECR only.</p> 
<p>In this blog post, we will show you how to use a Docker image from a private registry to create the AWS CodeBuild runtime environment. The credentials for the private registry are stored in <a href="https://aws.amazon.com/secrets-manager/">AWS Secrets Manager.</a></p> 
<p>Here is an overview of the services used in our example:</p> 
<p><a href="https://aws.amazon.com/codebuild/">AWS CodeBuild</a>&nbsp;is a fully managed continuous integration service that compiles source code, runs tests, and produces software packages that are ready to deploy. It provides a fully preconfigured build platform for most popular programming languages and build tools, including Apache Maven, Gradle, and more.</p> 
<p><a href="https://docs.docker.com/docker-hub/repos/">Docker Hub</a> repositories allow you to share container images with your team, customers, or the Docker community at large.</p> 
<p><a href="https://aws.amazon.com/secrets-manager/">AWS Secrets Manager</a> protects secrets required to access your applications, services, and IT resources. The services makes it possible for you to easily rotate, manage, and retrieve database credentials, API keys, and other secrets throughout their lifecycle.</p> 
<p>&nbsp;</p> 
<p><img class="alignnone wp-image-2899 size-full" src="https://d2908q01vomqb2.cloudfront.net/7719a1c782a1ba91c031a682a0a2f8658209adbf/2019/01/24/Untitled-Diagram-1.png" alt="" width="672" height="302" /></p> 
<p><strong>Prerequisites:</strong></p> 
<p>To get started you need:</p> 
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A private repository or account.</p> 
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A Secrets Manager secret that stores your Docker Hub credentials. The credentials are used to access your private repository.</p> 
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; An AWS account to create an AWS CodeBuild project.</p> 
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A service role created in IAM that grants access to your Secrets Manager secret.</p> 
<p>&middot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; An AWS CodeCommit repository set up in your AWS account with a buildspec.yml file and sample code.</p> 
<p><strong>Create a private registry</strong></p> 
<p>If you do not have a private registry, follow the steps in the documentation</p> 
<p>on the Docker website. Alternatively, you can execute the following commands in a terminal to pull an image, get its ID, and push it to a new repository.</p> 
<pre><code class="lang-bash">docker pull amazonlinux

docker images amazonlinux --format {{.ID}}

docker tag image-id your-username/repository-name:latest

docker login

docker push your-username/repository-name</code></pre> 
<p>&nbsp;</p> 
<p><strong>Create a basic secret in AWS Secrets Manager</strong></p> 
<p>In AWS Secrets Manager, a basic secret is one with a minimum of metadata and a single encrypted secret value. The one version thatâ€™s stored in the secret is automatically labeled AWSCURRENT.</p> 
<p><strong>To create a basic secret</strong></p> 
<p>1.&nbsp;&nbsp;&nbsp;&nbsp; Open the AWS Secrets Manager console at https://console.aws.amazon.com/secretsmanager/.</p> 
<p>2.&nbsp;&nbsp;&nbsp;&nbsp; Choose Store a new secret.</p> 
<p>3.&nbsp;&nbsp;&nbsp;&nbsp; In the Select a secret type section, specify the kind of secret that you want to create by choosing Other type of secrets, and then enter a user name and password to access your private registry.</p> 
<p>4.&nbsp;&nbsp;&nbsp;&nbsp; In Secret key/value, create one key-value pair for your Docker Hub user name and one key-value pair for your Docker Hub password.</p> 
<p>5.&nbsp;&nbsp;&nbsp;&nbsp; For Secret name, enter a name, such as dockerhub. You can enter an optional description to help you remember that this is a secret for Docker Hub.</p> 
<p>6.&nbsp;&nbsp;&nbsp;&nbsp; Leave Disable automatic rotation selected because the keys correspond to your Docker Hub credentials.</p> 
<p>7.&nbsp;&nbsp;&nbsp;&nbsp; Review your settings, and then choose Store secret.</p> 
<p>&nbsp;</p> 
<p><img class="alignnone wp-image-2898 size-full" src="https://d2908q01vomqb2.cloudfront.net/7719a1c782a1ba91c031a682a0a2f8658209adbf/2019/01/24/Screen-Shot-2019-01-23-at-3.29.02-PM.png" alt="" width="1428" height="1090" /></p> 
<p>&nbsp;</p> 
<p><strong>Create an AWS CodeBuild project to pull Docker images from a private registry</strong></p> 
<p><strong>Note</strong></p> 
<p>If your private registry is in your VPC, it must have public internet access. AWS CodeBuild cannot pull an image from a private IP address in a VPC.</p> 
<p>To use a Docker image from a private registry in your AWS CodeBuild project</p> 
<p>1.&nbsp;&nbsp;&nbsp;&nbsp; Open the AWS CodeBuild console at https://console.aws.amazon.com/codesuite/codebuild/home.</p> 
<p>2.&nbsp;&nbsp;&nbsp;&nbsp; Choose Create project.</p> 
<p>3.&nbsp;&nbsp;&nbsp;&nbsp; In Project configuration, for&nbsp;Project name, enter a name and description for the build project.</p> 
<p>4.&nbsp;&nbsp;&nbsp;&nbsp; In Source, for Source provider, choose the source code provider type. In this example, we are using the name of an AWS CodeCommit repository.</p> 
<p>&nbsp;</p> 
<p><img class="alignnone wp-image-2887 size-full" src="https://d2908q01vomqb2.cloudfront.net/7719a1c782a1ba91c031a682a0a2f8658209adbf/2019/01/23/Screen-Shot-2019-01-23-at-1.35.56-PM.png" alt="" width="1634" height="702" /></p> 
<p>5. We will pull the Docker image from a private registry and use the image to create the build environment to build artifacts. To configure the build environment, in Environment, choose Custom image. For Environment type, choose Linux or Windows. For Custom image type, choose Other location, and then enter the image location and the ARN or name of your Secrets Manager credentials.</p> 
<p><img class="alignnone wp-image-2897 size-full" src="https://d2908q01vomqb2.cloudfront.net/7719a1c782a1ba91c031a682a0a2f8658209adbf/2019/01/24/Screen-Shot-2019-01-23-at-3.40.45-PM.png" alt="" width="1634" height="1056" /></p> 
<p>6. Go to the build project you just created, and choose Start build. The build execution will download the source code from the AWS CodeCommit repository and provision the build environment using the image retrieved from the registry.</p> 
<p><strong>Conclusion</strong></p> 
<p>Using the above guidelines, you now can now provision build environment using docker images from private registry.</p> 
<p><strong>Next steps:</strong></p> 
<p>Now that you have seen how to use Docker images to provision build environments from a private registry, you can integrate a build step in <a href="https://aws.amazon.com/codepipeline/">AWS CodePipeline</a> and use the build environment to create artifacts and deploy your application. To integrate a build step in your pipeline, see <a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments.html">Working with Deployments in AWS CodeDeploy in the AWS CodeDeploy User Guide</a>.</p> 
<p>If you have feedback, please leave it in the&nbsp;Comments&nbsp;section below. If you have questions, please start a thread on the <a href="https://forums.aws.amazon.com/forum.jspa?forumID=230">AWS CodeBuild forum</a> or contact&nbsp;<a href="https://console.aws.amazon.com/support/home?">AWS Support</a></p> 
<p>&nbsp;</p> 
<p>&nbsp;</p> 
<p>&nbsp;</p> 
<p>&nbsp;</p> 
<p>&nbsp;</p>