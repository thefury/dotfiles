<p>In an earlier post, <a href="https://aws.amazon.com/blogs/security/enabling-serverless-security-analytics-using-aws-waf-full-logs/" rel="noopener noreferrer" target="_blank">Enabling serverless security analytics using AWS WAF full logs, Amazon Athena, and Amazon QuickSight</a>, published on March 28, 2019, the authors showed you how to stream WAF logs with Amazon Kinesis Firehose for visualization using QuickSight. This approach used no filtering of the logs so that you could visualize the full data set. However, you are often only interested in seeing specific events. Or you might be looking to minimize log size to save storage costs. In this post, I show you how to apply rules in Amazon Kinesis Firehose to trim down logs. You can then apply the same visualizations you used in the previous solution.</p> 
<p><a href="https://aws.amazon.com/waf/" rel="noopener noreferrer" target="_blank">AWS WAF</a> is a web application firewall that supports full logging of all the web requests it inspects. For each request, AWS WAF logs the raw HTTP/S headers along with information on which AWS WAF rules were triggered. Having complete logs is useful for compliance, auditing, forensics, and troubleshooting custom and <a href="https://aws.amazon.com/mp/security/WAFManagedRules/" rel="noopener noreferrer" target="_blank">Managed Rules for AWS WAF</a>. However, for some use cases, you might not want to log all of the requests inspected by AWS WAF. For example, to reduce the volume of logs, you might only want to log the requests blocked by AWS WAF, or you might want to remove certain HTTP header or query string parameter values from your logs. In many cases, unblocked requests are often already stored in your CloudFront access logs or web server logs and, therefore, using AWS WAF logs can result in redundant data for these requests, while logging blocked traffic can help you to identify bad actors or root cause false positives. </p> 
<p>In this post, I’ll show you how to create an <a href="https://aws.amazon.com/kinesis/data-firehose/" rel="noopener noreferrer" target="_blank">Amazon Kinesis Data Firehose</a> stream to filter out unneeded records, so that you only retain log records for requests that were blocked by AWS WAF. From here, the logs can be stored in Amazon S3 or directed to SIEM (Security information and event management) and log analysis tools. </p> 
<p>To simplify things, I’ll provide you with a CloudFormation template that will create the resources highlighted in the diagram below:<br /> &nbsp;<br /> </p>
<div id="attachment_10393" style="width: 760px" class="wp-caption aligncenter">
 <img src="https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2019/04/03/fig-1-Trimming-WAF-Logs-with-Kinesis-Firehose-Transforms.png" alt="Figure 1: Solution architecture" width="750" height="423" class="size-full wp-image-10393" />
 <p class="wp-caption-text">Figure 1: Solution architecture</p>
</div>
<p></p> 
<ol> 
 <li>A Kinesis Data Firehose delivery stream is used to receive log records from AWS WAF.</li> 
 <li>An IAM role for the Kinesis Data Firehose delivery stream, with permissions needed to invoke Lambda and write to S3.</li> 
 <li>A Lambda function used to filter out WAF records matching the default action before the records are written to S3.</li> 
 <li>An IAM role for the Lambda function, with the permissions needed to create CloudWatch logs (for troubleshooting). </li> 
 <li>An S3 bucket where the WAF logs will be stored.</li> 
</ol> 
<h3>Prerequisites and assumptions</h3> 
<ul> 
 <li>In this post, I assume that the AWS WAF default action is configured to allow requests that don’t explicitly match a blocking WAF rule. So I’ll show you how to omit any records matching the WAF default action. </li> 
 <li>You need to already have a AWS WAF WebACL created. In this example, you’ll use a WebACL generated from the <a href="https://aws.amazon.com/about-aws/whats-new/2017/07/use-aws-waf-to-mitigate-owasps-top-10-web-application-vulnerabilities/" rel="noopener noreferrer" target="_blank">AWS WAF OWASP 10 template</a>. For more information on deploying AWS WAF to a CloudFront or ALB resource, see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/getting-started.html" rel="noopener noreferrer" target="_blank">Getting Started page</a>.</li> 
</ul> 
<h2>Step 1: Create a Kinesis Data Firehose delivery stream for AWS WAF logs</h2> 
<p>In this step, you’ll use the following <a href="https://s3.amazonaws.com/awsiammedia/public/sample/TrimAWSWAFLogs/KinesisWAFDeliveryStream.yml" rel="noopener noreferrer" target="_blank">CloudFormation template</a> to create a Kinesis Data Firehose delivery stream that writes logs to an S3 bucket. The template also creates a Lambda function that omits AWS WAF records matching the default action.</p> 
<p>Here’s how to launch the template:</p> 
<ol> 
 <li>Open CloudFormation in the AWS console. </li> 
 <li>For WAF deployments on Amazon CloudFront, select region <span style="font-family: courier">US-EAST-1</span>. Otherwise, create the stack in the same region in which your AWS WAF Web ACL is deployed. </li> 
 <li>Select the <b>Create Stack</b> button.</li> 
 <li>In the CloudFormation wizard, select <b>Specify an Amazon S3 template URL</b> and copy and paste the following URL into the text box, then select <b>Next</b>:<br /> <a href="https://s3.amazonaws.com/awsiammedia/public/sample/TrimAWSWAFLogs/KinesisWAFDeliveryStream.yml" rel="noopener noreferrer" target="_blank">https://s3.amazonaws.com/awsiammedia/public/sample/TrimAWSWAFLogs/KinesisWAFDeliveryStream.yml</a> </li> 
 <li>On the options page, leave the default values and select <b>Next</b>.</li> 
 <li>Specify the following and then select <b>Next</b>: 
  <ol type="a"> 
   <li><b>Stack name</b>: (for example, <span style="font-family: courier">kinesis-waf-logging</span>). Make sure to note your stack name, as you’ll need to provide it later in the walkthrough. </li> 
   <li><b>Buffer siz</b>e: This value specifies the size in MB for which Kinesis will buffer incoming records before processing. </li> 
   <li><b>Buffer interval</b>: This value specifies the interval in seconds for which Kinesis will buffer incoming records before processing. </li> 
  </ol> 
  <blockquote>
   <p><strong>Note:</strong> Kinesis will trigger data delivery based on which buffer condition is satisfied first. This CloudFormation sets the default buffer size to 3MB and interval size to 900 seconds to match the maximum transformation buffer size and intervals which is set by this template. To learn more about Kinesis Data Firehose buffer conditions, read this <a href="https://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#frequency" rel="noopener noreferrer" target="_blank">documentation</a>. </p>
  </blockquote> <p> &nbsp;<br /> </p>
  <div id="attachment_10394" style="width: 760px" class="wp-caption aligncenter">
   <img src="https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2019/04/03/fig-2-Trimming-WAF-Logs-with-Kinesis-Firehose-Transforms.png" alt="Figure 2: Specify the stack name, buffer size, and buffer interval" width="750" height="601" class="size-full wp-image-10394" />
   <p class="wp-caption-text">Figure 2: Specify the stack name, buffer size, and buffer interval</p>
  </div> </li> 
 <li>Select the check box for <b>I acknowledge that AWS CloudFormation might create IAM resources</b> and choose <b>Create</b>.</li> 
 <li>Wait for the template to finish creating the resources. This will take a few minutes. On the CloudFormation dashboard, the status next to your stack should say <b>CREATE_COMPLETE</b>.</li> 
 <li>From the <b>AWS Management Console</b>, open <b>Amazon Kinesis</b> and find the Data Firehose delivery stream on the dashboard. Note that the name of the stream will start with <b>aws-waf-logs-</b> and end with the name of the CloudFormation. This prefix is required in order to configure AWS WAF to write logs to the Kinesis stream.</li> 
 <li>From the <b>AWS Management Console</b>, open <b>AWS Lambda</b> and view the Lambda function created from the CloudFormation template. The function name should start with the Stack name from the CloudFormation template. I included the function code generated from the CloudFormation template below so you can see what’s going on.<br /> 
  <blockquote>
   <p><strong>Note:</strong> Through CloudFormation, the code is deployed without indentation. To format it for readability, I recommend using the code formatter built into Lambda under the edit tab. This code can easily be modified for custom record filtering or transformations.</p>
  </blockquote> 
  <div class="hide-language"> 
   <pre><code class="lang-text">
    'use strict';

    exports.handler = (event, context, callback) =&gt; {
        /* Process the list of records and drop those containing Default_Action */
        const output = event.records.map((record) =&gt; {
            const entry = (new Buffer(record.data, 'base64')).toString('utf8');
            if (!entry.match(/Default_Action/g)){
                return {
                    recordId: record.recordId,
                    result: 'Ok',
                    data: record.data,
                };
            } else {
                return {
                    recordId: record.recordId,
                    result: 'Dropped',
                    data: record.data,
                };
            }
        });
    
        console.log(`Processing completed.  Successful records ${output.length}.`);
        callback(null, { records: output });
    };&quot;        
    </code></pre> 
   <p></p>
  </div> </li> 
</ol> 
<p>You now have a Kinesis Data Firehose stream that AWS WAF can use for logging records.</p> 
<h3>Cost Considerations</h3> 
<p>This template sets the Kinesis transformation buffer size to 3MB and buffer interval to 900 seconds (the maximum values) in order to reduce the number of Lambda invocations used to process records. On average, an AWS WAF record is approximately 1-1.5KB. With a buffer size of 3MB, Kinesis will use 1 Lambda invocation per 2000-3000 records. Visit the <a href="https://aws.amazon.com/lambda/pricing/" rel="noopener noreferrer" target="_blank">AWS Lambda website</a> to learn more about pricing. </p> 
<h2>Step 2: Configure AWS WAF Logging</h2> 
<p>Now that you have an active Amazon Kinesis Firehose delivery stream, you can configure your AWS WAF WebACL to turn on logging.</p> 
<ol> 
 <li>From the <b>AWS Management Console</b>, open <b>WAF &amp; Shield</b>.</li> 
 <li>Select the WebACL for which you would like to enable logging.</li> 
 <li>Select the <b>Logging</b> tab.</li> 
 <li>Select the <b>Enable Logging</b> button.</li> 
 <li>Next to <b>Amazon Kinesis Data Firehose</b>, select the stream that was created from the CloudFormation template in <b>Step 1</b> (for example, <span style="font-family: courier">aws-waf-logs-kinesis-waf-stream</span>) and select <b>Create</b>.</li> 
</ol> 
<p>Congratulations! Your AWS WAF WebACL is now configured to send records of requests inspected by AWS WAF to Kinesis Data Firehose. From there, records that match the default action will be dropped, and the remaining records will be stored in S3 in JSON format. </p> 
<p>Below is a sample of the logs generated from this example. Notice that there are only blocked records in the logs.<br /> &nbsp;<br /> </p>
<div id="attachment_10395" style="width: 760px" class="wp-caption aligncenter">
 <img src="https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2019/04/03/fig-3-Trimming-WAF-Logs-with-Kinesis-Firehose-Transforms.png" alt="Figure 3: Sample logs" width="750" height="252" class="size-full wp-image-10395" />
 <p class="wp-caption-text">Figure 3: Sample logs</p>
</div>
<p></p> 
<h3>Conclusion</h3> 
<p>In this blog, I’ve provided you with a CloudFormation template to generate a Kinesis Data Firehose stream that can be used to log requests blocked by AWS WAF, omitting requests matching the default action. By omitting the default action, I have reduced the number of log records that must be reviewed to identify bad actors, tune new WAF rules, and/or root cause false positives. For unblocked traffic, consider using <a href="https://docs.aws.amazon.com/athena/latest/ug/cloudfront-logs.html" rel="noopener noreferrer" target="_blank">CloudFront’s access logs with Amazon Athena</a> or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AnalyzingLogData.html" rel="noopener noreferrer" target="_blank">CloudWatch Logs Insights</a> to query and analyze the data. To learn more about AWS WAF logs, read our <a href="https://docs.aws.amazon.com/waf/latest/developerguide/logging.html" rel="noopener noreferrer" target="_blank">developer guide for AWS WAF</a>.</p> 
<p>If you have feedback about this blog post, , please submit them in the Comments section below. If you have issues with AWS WAF, start a thread on the <a href="https://forums.aws.amazon.com/forum.jspa?forumID=207" rel="noopener noreferrer" target="_blank">AWS SSO forum</a> or <a href="https://console.aws.amazon.com/support/home" rel="noopener noreferrer" target="_blank">contact AWS Support</a>.</p> 
<p><strong>Want more AWS Security how-to content, news, and feature announcements? Follow us on <a href="https://twitter.com/AWSsecurityinfo" title="Twitter" target="_blank" rel="noopener noreferrer">Twitter</a>.</strong></p> 
<footer> 
 <div class="blog-author-box"> 
  <div class="blog-author-image"> 
   <img src="https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2019/04/03/author-bio.jpg" alt="Author" width="119" height="160" class="aligncenter size-full wp-image-10396" /> 
  </div> 
  <h3 class="lb-h4">Tino Tran</h3> 
  <p>Tino is a Senior Edge Specialized Solutions Architect based out of Florida. His main focus is to help companies deliver online content in a secure, reliable, and fast way using AWS Edge Services. He is a experienced technologist with a background in software engineering, content delivery networks, and security.</p> 
  <p></p>
 </div> 
</footer>