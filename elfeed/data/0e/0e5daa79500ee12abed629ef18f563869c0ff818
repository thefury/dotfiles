<p><img style="float: right;border: 1px solid purple;margin-left: 8px;margin-bottom: 8px" src="https://media.amazonwebservices.com/blog/2019/ritchie_and_thompson_pdp11_1.jpeg" />Last week we made a fairly quiet (too quiet, in fact) announcement of our plan to slowly and carefully deprecate the path-based access model that is used to specify the address of an object in an S3 bucket. I spent some time talking to the S3 team in order to get a better understanding of the situation in order to write this blog post. Here’s what I learned…</p> 
<p>We <a href="https://aws.amazon.com/blogs/aws/amazon_s3/">launched S3</a> in early 2006. Jeff Bezos’ original spec for S3 was very succinct – he wanted <code>malloc</code> (a key memory allocation function for C programs) for the Internet. From that starting point, S3 has grown to the point where it now stores many trillions of objects and processes millions of requests per second for them. Over the intervening 13 years, we have added many new storage options, features, and security controls to S3.</p> 
<p><span style="text-decoration: underline"><strong>Old vs. New</strong></span><br /> S3 currently supports two different addressing models: path-style and virtual-hosted style. Let’s take a quick look at each one. The path-style model looks like either this (the global S3 endpoint):</p> 
<p><code>https://s3.amazonaws.com/jbarr-public/images/ritchie_and_thompson_pdp11.jpeg</code><br /> <code>https://s3.amazonaws.com/jeffbarr-public/classic_amazon_door_desk.png</code></p> 
<p>Or this (one of the regional S3 endpoints):</p> 
<p><code>https://s3-us-east-2.amazonaws.com/jbarr-public/images/ritchie_and_thompson_pdp11.jpeg</code><br /> <code>https://s3-us-east-2.amazonaws.com/jeffbarr-public/classic_amazon_door_desk.png</code></p> 
<p>In this example, <code>jbarr-public</code> and <code>jeffbarr-public</code> are bucket names; <code>/images/ritchie_and_thompson_pdp11.jpeg</code> and <code>/classic_amazon_door_desk.png</code> are object keys.</p> 
<p>Even though the objects are owned by distinct AWS accounts and are in different S3 buckets (and possibly in distinct AWS regions), both of them are in the DNS subdomain <code>s3.amazonaws.com</code>. Hold that thought while we look at the equivalent virtual-hosted style references (although you might think of these as “new,” they have been around since at least 2010):</p> 
<p><code>https://jbarr-public.s3.amazonaws.com/images/ritchie_and_thompson_pdp11.jpeg</code><br /> <code>https://jeffbarr-public.s3.amazonaws.com/classic_amazon_door_desk.png</code></p> 
<p>These URLs reference the same objects, but the objects are now in distinct DNS subdomains (<code>jbarr-public.s3.amazonaws.com</code> and <code>jeffbarr-public.s3.amazonaws.com</code>, respectively). The difference is subtle, but very important. When you use a URL to reference an object, DNS resolution is used to map the subdomain name to an IP address. With the path-style model, the subdomain is always <code>s3.amazonaws.com</code> or one of the regional endpoints; with the virtual-hosted style, the subdomain is specific to the bucket. This additional degree of endpoint specificity is the key that opens the door to many important improvements to S3.</p> 
<p><span style="text-decoration: underline"><strong>Out with the Old</strong></span><br /> In response to feedback on the original deprecation plan that we announced last week, we are making an important change. Here’s the executive summary:</p> 
<p><strong>Original Plan</strong> – Support for the path-style model ends on September 30, 2020.</p> 
<p><strong>Revised Plan</strong> – Support for the path-style model continues for buckets created on or before September 30, 2020. Buckets created after that date must be referenced using the virtual-hosted model.</p> 
<p>We are moving to virtual-hosted references for two reasons:</p> 
<p><strong>First,</strong> anticipating a world with billions of buckets homed in many dozens of regions, routing all incoming requests directly to a small set of endpoints makes less and less sense over time. DNS resolution, scaling, security, and traffic management (including DDoS protection) are more challenging with this centralized model. The virtual-hosted model reduces the area of impact (which we call the “blast radius” internally) when problems arise; this helps us to increase availability and performance.</p> 
<p><strong>Second</strong>, the team has a lot of powerful features in the works, many of which depend on the use of unique, virtual-hosted style subdomains. Moving to this model will allow you to benefit from these new features as soon as they are announced. For example, we are planning to deprecate some of the oldest security ciphers and versions (details to come later). The deprecation process is easier and smoother (for you and for us) if you are using virtual-hosted references.</p> 
<p><span style="text-decoration: underline"><strong>In With the New</strong></span><br /> As just one example of what becomes possible when using virtual-hosted references, we are thinking about providing you with increased control over the security configuration (including ciphers and cipher versions) for each bucket. If you have ideas of your own, feel free to get in touch.</p> 
<p><span style="text-decoration: underline"><strong>Moving Ahead</strong></span><br /> Here are some things to know about our plans:</p> 
<p><strong>Identifying Path-Style References</strong> – You can use <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html">S3 Access Logs</a> (look for the <code>Host Header</code> field) and AWS <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-and-data-events-with-cloudtrail.html?shortFooter=true#logging-data-events-examples">CloudTrail Data Events</a> (look for the <code>host</code> element of the <code>requestParameters</code> entry) to identify the applications that are making path-style requests.</p> 
<p><strong>Programmatic Access</strong> – If your application accesses S3 using one of the <a href="https://aws.amazon.com/tools/" title="">AWS SDKs</a>, you don’t need to do anything, other than ensuring that your SDK is current. The SDKs already use virtual-hosted references to S3, except if the bucket name contains one or more “.” characters.</p> 
<p><strong>Bucket Names with Dots</strong> – It is important to note that bucket names with “.” characters are perfectly valid for <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">website hosting</a> and other use cases. However, there are some known issues with TLS and with SSL certificates. We are hard at work on a plan to support virtual-host requests to these buckets, and will share the details well ahead of September 30, 2020.</p> 
<p><strong>Non-Routable Names</strong> – Some characters that are valid in the path component of a URL are not valid as part of a domain name. Also, paths are case-sensitive, but domain and subdomain names are not. We’ve been enforcing more stringent rules for new bucket names since last year. If you have data in a bucket with a non-routable name and you want to switch to virtual-host requests, you can use the new <a href="https://aws.amazon.com/blogs/aws/new-amazon-s3-batch-operations/">S3 Batch Operations</a> feature to move the data. However, if this is not a viable option, please reach out to <a href="https://aws.amazon.com/premiumsupport/plans/developers/">AWS Developer Support</a>.</p> 
<p><strong>Documentation</strong> – We are planning to update the <a href="https://docs.aws.amazon.com/s3/index.html">S3 Documentation</a> to encourage all developers to build applications that use virtual-host requests. The <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html">Virtual Hosting</a> documentation is a good starting point.</p> 
<p><span style="text-decoration: underline"><strong>We’re Here to Help</strong></span><br /> The S3 team has been working with some of our customers to help them to migrate, and they are ready to work with many more.</p> 
<p>Our goal is to make this deprecation smooth and uneventful, and we want to help minimize any costs you may incur! Please do not hesitate to reach out to us if you have questions, challenges, or concerns.</p> 
<p>— <a href="https://twitter.com/jeffbarr">Jeff</a>;</p> 
<p>PS – Stay tuned for more information on tools and other resources.</p><div class="feedflare">
<a href="http://feeds.feedburner.com/~ff/AmazonWebServicesBlog?a=EUrdqxZvSJc:BLJXvLkUZS0:yIl2AUoC8zA"><img src="http://feeds.feedburner.com/~ff/AmazonWebServicesBlog?d=yIl2AUoC8zA" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/AmazonWebServicesBlog?a=EUrdqxZvSJc:BLJXvLkUZS0:dnMXMwOfBR0"><img src="http://feeds.feedburner.com/~ff/AmazonWebServicesBlog?d=dnMXMwOfBR0" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/AmazonWebServicesBlog?a=EUrdqxZvSJc:BLJXvLkUZS0:7Q72WNTAKBA"><img src="http://feeds.feedburner.com/~ff/AmazonWebServicesBlog?d=7Q72WNTAKBA" border="0"></img></a>
</div><img src="http://feeds.feedburner.com/~r/AmazonWebServicesBlog/~4/EUrdqxZvSJc" height="1" width="1" alt=""/>