<p>Oracle PeopleSoft Enterprise is a widely used enterprise resource planning (ERP) application. Customers run production deployments of various PeopleSoft applications on AWS, including PeopleSoft Human Capital Management (HCM), Financials and Supply Chain Management (FSCM), Interactive Hub (IAH), and Customer Relationship Management (CRM).</p> 
<p>We published a whitepaper on <a href="https://d1.awsstatic.com/whitepapers/aws-best-practices-for-oracle-peoplesoft.pdf">Best Practices for Running Oracle PeopleSoft on AWS</a> in December 2017. It provides architectural guidance and outlines best practices for high availability, security, scalability, and disaster recovery for running Oracle PeopleSoft applications on AWS.</p> 
<p>It also covers highly available, scalable, and cost-effective multi-region reference architectures for deploying PeopleSoft applications on AWS, like the one illustrated below.</p> 
<p><img class="size-full wp-image-852 alignnone" src="https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2018/09/13/PeopleSoft_migrate_AWS.png" alt="" width="624" height="349" /></p> 
<p>While migrating your Oracle PeopleSoft applications to AWS, here are some things to keep in mind:</p> 
<ul> 
 <li><strong>Multi-AZ deployments</strong> – Deploy your PeopleSoft servers and database across multiple <a href="https://aws.amazon.com/about-aws/global-infrastructure/">Availability Zones</a> (AZs) for high availability. AWS AZs allow you to operate production applications and databases that are more highly available, fault tolerant, and scalable than would be possible from a single data center.</li> 
 <li><strong>Use Amazon Relational Database Service (Amazon RDS) to deploy your PeopleSoft database</strong> – <a href="https://aws.amazon.com/rds/oracle">Amazon RDS</a> makes it easy to set up, operate, and scale a relational database in the cloud. It provides cost-efficient and resizable capacity while managing time-consuming database administration tasks, allowing you to focus on your applications and business. Deploying an RDS for Oracle Database in multiple AZs simplifies creating a highly available architecture because you’ll have built-in support for automated failover from your primary database to a synchronously replicated secondary database in an alternative AZ.</li> 
 <li><strong>Migration of large databases</strong> – Migrating large databases to Amazon RDS within a small downtime window requires careful planning: 
  <ul> 
   <li>We recommend that you take a point-in-time export of your database, transfer it to AWS, import it into Amazon RDS, and then apply the delta changes from on-premises.</li> 
   <li>Use <a href="https://aws.amazon.com/directconnect/">AWS Direct Connect</a> or <a href="https://aws.amazon.com/snowball/">AWS Snowball</a> to transfer the export dump to AWS.</li> 
   <li>Use <a href="https://aws.amazon.com/dms/">AWS Database Migration Service</a> to apply the delta changes and sync the on-premises database with the Amazon RDS instance.</li> 
  </ul> </li> 
 <li><strong>AWS Infrastructure Event Management (IEM)</strong> – Take advantage of AWS IEM to mitigate risks and help ensure a smooth migration. IEM is a highly focused engagement where AWS experts provide you with architectural and operational guidance, assist you in reviewing and fine-tuning your migration plan, and provide real-time support for your migration.</li> 
 <li><strong>Cost optimization</strong> – There are a number of ways you can optimize your costs on AWS, including: 
  <ul> 
   <li>Use reserved instances for environments that are running most of the time, like production environments. A <a href="https://aws.amazon.com/ec2/pricing/reserved-instances/">Reserved Instance</a> is an EC2 offering that provides you with a significant discount (up to 75%) on EC2 usage compared to On-Demand pricing when you commit to a one-year or three-year term.</li> 
   <li>Shut down resources that are not in use. For example, development and test environments are typically used for only eight hours a day during the work week. You can stop these resources when they are not in use for a potential cost savings of 75% (40 hours vs. 168 hours). Use the <a href="https://aws.amazon.com/answers/infrastructure-management/instance-scheduler/">AWS Instance Scheduler</a> to automatically start and stop your Amazon EC2 and Amazon RDS instances based on a schedule.</li> 
  </ul> </li> 
</ul> 
<p>The <a href="https://d1.awsstatic.com/whitepapers/configuring-amazon-rds-as-peoplesoft-database.pdf">Configuring Amazon RDS as an Oracle PeopleSoft Database</a> whitepaper has detailed instructions on configuring a backend Amazon RDS database for your Oracle PeopleSoft deployment on AWS. After you read the whitepaper, I recommend these other resources as your next step:</p> 
<ul> 
 <li>For a real-world case study on migrating a large Oracle database to AWS, check out this <a href="https://aws.amazon.com/blogs/database/australia-finance-groups-journey-to-cloud-databases/">blog post</a> about how AFG migrated their mission-critical Oracle Siebel CRM system running on Oracle Exadata on-premises to Amazon RDS for Oracle.</li> 
 <li>For more information on running Oracle Enterprise Solutions on AWS, check out this <a href="https://www.youtube.com/watch?v=r9pC6wlNBl4&amp;feature=youtu.be&amp;t=10">re:Invent 2017 video</a>.</li> 
 <li>You can find more Oracle on AWS resources <a href="https://aws.amazon.com/oracle/resources/">here</a> and <a href="https://aws.amazon.com/rds/oracle/developer-resources/">here</a>.</li> 
</ul> 
<h2>About the author</h2> 
<p><img class="alignleft size-thumbnail wp-image-853" src="https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2018/09/13/ashok_sundaram-120x150.jpg" alt="" width="120" height="150" /> Ashok Shanmuga Sundaram is a partner solutions architect with the Global System Integrator (GSI) team at Amazon Web Services. He works with the GSIs to provide guidance on enterprise cloud adoption, migration and strategy.</p>