<p>At AWS re:Invent 2018, we <a href="https://aws.amazon.com/blogs/compute/announcing-ruby-support-for-aws-lambda/">announced Ruby support in AWS Lambda</a>. The Ruby runtime in Lambda has built-in logic to make packaging your dependencies simple.</p> 
<p>AWS SAM CLI is a CLI tool currently in beta for local development and testing of serverless applications. It encapsulates several build, test, and deployment patterns for Lambda functions. Today, we’ve launched support for Ruby builds in the SAM CLI tool.</p> 
<h2 id="how-to-build-aws-lambda-functions-with-dependencies-in-ruby">How to build AWS Lambda functions with dependencies in Ruby</h2> 
<p>In most cases, vendoring your dependencies for deployment to Lambda is simple. Using Ruby 2.5, you can run <code>bundle install</code> to create a <code>Gemfile.lock</code> file if you don’t have one, then vendor and zip your dependencies.</p> 
<pre><code>bundle install --deployment
zip -r source.zip *</code></pre> 
<p>Because the Ruby runtime looks in <code>/var/task/vendor/bundle/ruby/2.5.0</code> for dependencies, you don’t need to do any additional configuration for Lambda to automatically recognize your dependencies. However, there are a couple of caveats to building Ruby functions to keep in mind:</p> 
<ul> 
 <li>You must use Ruby 2.5 to build your dependencies. Dependencies that are vendored for deployment are sensitive to the Ruby minor version used when you run the bundle command.</li> 
 <li>Dependency installations that include native extensions are platform sensitive. You must build in an environment compatible with Amazon Linux for these dependencies to work on Lambda.</li> 
</ul> 
<h2 id="using-aws-sam-cli-to-simplify-ruby-function-builds">Using AWS SAM CLI to simplify Ruby function builds</h2> 
<p>With the AWS SAM CLI Ruby build support, you can address both of these build questions. Let’s create a SAM CLI project to see how it works.</p> 
<pre><code>sam init --runtime ruby2.5 --name hello-ruby-sam
cd hello-ruby-sam</code></pre> 
<p>This provides an example method using Ruby on Lambda. With the Ruby build support in SAM CLI, we can now reduce the build process to a single command.</p> 
<pre><code>sam build</code></pre> 
<p>If we include dependencies with native extensions, such as <code>nokogiri</code>, we want to make sure we’re building on an Amazon Linux-compatible image. With SAM CLI, you can do that in a single command as well.</p> 
<pre><code>sam build --use-container</code></pre> 
<p>We’re now ready to deploy our function to Lambda.</p> 
<h2 id="exploring-sam-cli">Exploring SAM CLI</h2> 
<p>First, let’s test our function locally. The following command stands up our function on a local endpoint, simulating <a href="https://aws.amazon.com/api-gateway/">Amazon API Gateway</a>.</p> 
<pre><code>sam local start-api</code></pre> 
<p>You can also run <code>sam local invoke</code> to test out singular calls with event JSON files. After testing, we can use SAM CLI to help package and deploy our function to Lambda.</p> 
<pre><code>sam package \
    --template-file template.yaml \
    --output-template-file packaged.yaml \
    --s3-bucket REPLACE_THIS_WITH_YOUR_S3_BUCKET_NAME

sam deploy \
    --template-file packaged.yaml \
    --stack-name sam-app \
    --capabilities CAPABILITY_IAM

aws cloudformation describe-stacks \
    --stack-name sam-app --query 'Stacks[].Outputs'</code></pre> 
<p>The final command gives you an API Gateway endpoint that you can navigate to so that you can see your function in action!</p> 
<h2 id="conclusion">Conclusion</h2> 
<p>One of the goals of the AWS SAM CLI project is to standardize on several best practices around building, testing, and deploying AWS Lambda functions. We hope this launch makes it even easier to develop Ruby functions for Lambda.</p> 
<p>One thing to note, SAM CLI is an open-source project. Customers have added functionality for <a href="https://www.awsadvent.com/2018/12/10/aws-sam-my-exciting-first-open-source-experience/">.NET Core</a> and Node.js into the SAM CLI. We welcome your feedback and contributions on GitHub to <a href="https://github.com/awslabs/aws-sam-cli">AWS SAM CLI</a> and <a href="https://github.com/awslabs/aws-lambda-builders">AWS Lambda Builders!</a></p>