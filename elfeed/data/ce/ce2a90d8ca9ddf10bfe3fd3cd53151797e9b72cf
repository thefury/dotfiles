<p>Climate Change continues to have a profound effect on our quality of life. As a result, the investigation into sustainability is growing. Researchers in both the public and private sector are planning for the future by studying recorded climate history and using climate forecast models.</p> 
<p>To help explain these concepts, this post introduces the <a href="https://registry.opendata.aws/?search=ghcn" target="_blank" rel="noopener">Global Historical Climatology Network Daily (GHCN-D).</a> This registry is used by the global climate change research community.</p> 
<p>This post also provides a step-by-step demonstration of how Amazon Web Services (AWS) services improve access to this data for climate change research. Data scientists and engineers previously had to access hundreds of nodes on high-performance computers to query this data. Now they can get the same data by using a few steps on AWS.</p> 
<h2>Background</h2> 
<p>Global climate analysis is essential for researchers to assess the implications of climate change on the Earth’s natural capital and ecosystem resources. This activity requires high-quality climate datasets, which can be challenging to work with because of their scale and complexity. To have confidence in their findings, researchers must be confident about the provenance of the climate datasets that they work with. For example, researchers may be trying to answer questions like: has the climate of a particular food producing area changed in a way that impacts food security? They must be able to easily query authoritative and curated datasets.</p> 
<p>The <a href="https://www.ncei.noaa.gov/" target="_blank" rel="noopener">National Centers for Environmental Information (NCEI)</a> in the U.S. maintains a dataset of climate data that is based on observations from weather stations around the globe. It’s the Global Historical Climatology Network Daily (GHCN-D) — a central repository for daily weather summaries from ground-based stations. It is comprised of millions of quality-assured observations that are updated daily.</p> 
<p>The most common parameters recorded are daily temperatures, rainfall, and snowfall. These are useful parameters for assessing risks for drought, flooding, and extreme weather.</p> 
<h2>The challenge</h2> 
<p>The NCEI makes the GHCN_D data available in CSV format through an FTP server, organized by year. Organizing the data by year means that a complete copy of the archive requires over 255 files (the first year in the archive is 1763). Traditionally, if a researcher wants to work on this dataset they must download it and work on it locally. For a researcher to be sure of using the latest data for their analysis, they must repeat this download every day.</p> 
<p>For researchers, deriving insight from this data can be a challenge. They must be able to fully engage with the data, because that requires technical skill, computing resources, and subject matter expertise.</p> 
<h2>A new efficient approach</h2> 
<p>Through AWS’s collaboration with the NOAA Big Data Project, a daily snapshot of the GHCN_D dataset is now available on AWS. The data is publically accessible through an Amazon S3 bucket. For more information, see the <a href="https://registry.opendata.aws/noaa-ghcn/" target="_blank" rel="noopener">Registry of Open Data on AWS</a>.</p> 
<p>Having the data available in this way offers several advantages:</p> 
<ul> 
 <li><strong>The data is globally available to a community of users</strong>. Users no longer must download data to work on it. Everyone can work with the same, authoritative copy.</li> 
 <li><strong>Time to insight is reduced</strong>. By taking advantage of AWS services, researchers can immediately start to perform analysis.</li> 
 <li><strong>The cost of research is reduced</strong>. Researchers can switch off resources as soon as their analysis is finished.</li> 
</ul> 
<p>This blog post illustrates a workflow using <a href="https://aws.amazon.com/s3/?nc2=h_m1" target="_blank" rel="noopener">Amazon S3</a>, <a href="https://aws.amazon.com/athena/?nc2=h_m1" target="_blank" rel="noopener">Amazon Athena</a>, <a href="https://aws.amazon.com/glue/?hp=tile&amp;so-exp=below" target="_blank" rel="noopener">AWS Glue</a>, and <a href="https://aws.amazon.com/quicksight/?nc2=h_m1" target="_blank" rel="noopener">Amazon QuickSight</a> that demonstrates how quickly one can derive insights from this dataset.</p> 
<p>The workflow presented in this post follows these general steps:</p> 
<ul> 
 <li>Extract data files from the NOAA bucket and make the data available as tables.</li> 
 <li>Use SQL to query the data contained in the tables.</li> 
 <li>Show how to speed up analysis by creating tables from queries and storing those tables in a private Amazon S3 bucket.</li> 
 <li>Visualize the data to gain insight.</li> 
</ul> 
<h2>Overview of the GHCN_D dataset</h2> 
<p>The GHCN-D is a quality-assured dataset that contains daily weather summaries from weather stations across global land areas. It has the following properties:</p> 
<ul> 
 <li>Data is integrated from approximately 30 sources that provide weather observations from various national and international networks.</li> 
 <li>A comprehensive dataset for the US and good coverage for many parts of the world.</li> 
 <li>There are many types of daily weather observations in this dataset, but the majority are maximum temperature, minimum temperature, precipitation, snow fall, and snow depth. These observations include: 
  <ul> 
   <li>Over 35,000 temperature stations.</li> 
   <li>Over 100,000 precipitation stations.</li> 
   <li>Over 50,000 snowfall or snow depth stations</li> 
  </ul> </li> 
 <li>The source of each datum, the term used for a single record, is contained in the dataset. Each datum has a quality control flag associated with it.</li> 
 <li>The dataset is updated daily. The historic sources are reprocessed weekly.</li> 
</ul> 
<p>You can see in the graphic below how the data volume has grown in recent decades.</p> 
<p><img class="alignnone size-full wp-image-6462" style="margin: 20px 0px 20px 0px" src="https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2019/02/07/VisualizeClimateDataAthenaQuickSight1.png" alt="" width="800" height="481" /></p> 
<p><em>1763 to 2018. For 1763 there are less than a thousand observations. For 2017 there are over 34 million observations.</em></p> 
<h2>Organization of the data on Amazon S3</h2> 
<p>As previously mentioned, the GHCN-D dataset is accessible through an Amazon S3 bucket. The details of the dataset are on the Registry of Open Data on AWS (<a href="https://registry.opendata.aws/noaa-ghcn/" target="_blank" rel="noopener">RODA</a>). The landing page for the dataset on RODA contains a link to a comprehensive <a href="https://docs.opendata.aws/noaa-ghcn-pds/readme.html" target="_blank" rel="noopener">readme</a> file for the dataset. This <a href="https://docs.opendata.aws/noaa-ghcn-pds/readme.html" target="_blank" rel="noopener">readme</a> contains all of the lookup tables and variable definitions.</p> 
<p>This section shows the pertinent information required to start working with the dataset.</p> 
<p>The data is in a text, or comma-separated values (CSV), format and is contained in the Amazon S3 bucket called noaa-ghcn-pds.</p> 
<p>The noaa-ghcn-pds bucket contains virtual folders, and is structured like this:</p> 
<ul> 
 <li><strong>noaa-ghcn-pds</strong>. This is the root of the bucket with two subdirectories and a number of useful files. For the purposes of this exercise, we use only the ghcnd-stations.txt file. This file contains information about the observation stations that produced the data for the GHCN_D dataset. You must download the <a href="http://noaa-ghcn-pds.s3.amazonaws.com/ghcnd-stations.txt" target="_blank" rel="noopener">ghcnd-stations.txt</a> file.</li> 
 <li><strong>noaa-ghcn-pds/csv/</strong>. This virtual folder contains all of the observations from 1763 to the present organized in .csv files, one file for every year. For this exercise, we’ll collate this data into a single table.</li> 
</ul> 
<p>Also for the purpose of this exercise, the data from ‘ghcnd-stations.txt’ and the data contained in noaa-ghcn-pds/csv/ are extracted and added to two separate tables. These tables are the basis of the analysis.</p> 
<p>The tables are labeled as:</p> 
<ul> 
 <li><strong>tblallyears</strong>. This table contains all the records stored in the yearly .csv files from 1763 to present.</li> 
 <li><strong>tblghcnd_stations</strong>. This table contains information for over 106,430 weather stations.</li> 
</ul> 
<p>Point of interest: the .csv file from the year 1763 contains the data for one weather station. That station was located in the center of Milan, Italy.</p> 
<h2>The tools</h2> 
<p>To implement the general workflow in this exercise, we’re using the following tools:</p> 
<ul> 
 <li>Amazon Simple Storage Service (Amazon S3) to stage the data for analysis. The GHCN_D dataset is stored in a bucket on Amazon S3. We also use a private bucket to store new tables created from queries.</li> 
 <li>Amazon Athena to query data stored on Amazon S3 using standard SQL.</li> 
 <li>AWS Glue to extract and load data into Athena from the Amazon S3 buckets in which it is stored. AWS Glue is a fully managed extract, transform, and load (ETL) service.</li> 
 <li>AWS Glue Data Catalog to catalog the data that we query with Athena.</li> 
 <li>Amazon QuickSight to build visualizations, perform ad hoc analyses, and get insights from the dataset. Queries and tables from Athena can be read directly from Amazon QuickSight. Amazon QuickSight can also run queries against tables in Athena.</li> 
</ul> 
<p>To implement the processes outlined in this post, you need an AWS Account. For more information about creating an AWS account, see <a href="https://aws.amazon.com/start-now/?sc_ichannel=ha&amp;sc_icampaign=start-now&amp;sc_icontent=2235" target="_blank" rel="noopener">Getting Started with AWS</a>. You also must create a private Amazon S3 bucket located in the N. Virginia AWS Region. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/gsg/CreatingABucket.html" target="_blank" rel="noopener">Create a Bucket</a>.</p> 
<p>When you create the bucket, it must contain the following empty directories:</p> 
<ol> 
 <li>[your_bucket_name]/stations_raw/</li> 
 <li>[your_bucket_name]/ghcnblog/</li> 
 <li>[your_bucket_name]/ghcnblog/stations/</li> 
 <li>[your_bucket_name]/ghcnblog/allyears/</li> 
 <li>[your_bucket_name]/ghcnblog/1836usa/</li> 
</ol> 
<p>The following is an overview of how the various AWS services interact in this workflow.</p> 
<p><strong>Note</strong></p> 
<p>The AWS services are in the same AWS Region. One of the Amazon S3 buckets is the existing one that stores the GHCN_D data. The other Amazon S3 bucket is the bucket that you use for storing tables.</p> 
<p><img class="alignnone size-full wp-image-6463" style="margin: 20px 0px 20px 0px" src="https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2019/02/07/VisualizeClimateDataAthenaQuickSight2.png" alt="" width="433" height="505" /></p> 
<p><em>How the AWS services work together to compose this workflow.</em></p> 
<p>In addition to using the Console for the below steps, you can also use the AWS Command Line Interface or any of the <a href="https://aws.amazon.com/tools/" target="_blank" rel="noopener">Software Developer’s Kits (SDK)</a>, provided in a number of languages. Also, the queries you create in Athena can be programmatically executed on a scheduled basis or in response to triggers you chose using services like <a href="https://aws.amazon.com/lambda/" target="_blank" rel="noopener">AWS Lambda</a>.</p> 
<h2>The workflow</h2> 
<p>Now that we have the tools and the data, we are ready to:</p> 
<ol> 
 <li>Extract the yearly .csv files and add them to a table in Amazon Athena.</li> 
 <li>Extract the stations text file and add it to a separate table in Amazon Athena.</li> 
</ol> 
<h3>Extract the yearly .csv files and add it to a table in Amazon Athena</h3> 
<p>The complete set of daily weather observations is organized by year in one folder of the Amazon S3 bucket in .csv format. The path to the data is <strong>s3://noaa-ghcn-pds/csv</strong><strong>/</strong>.</p> 
<p>Each file is named by year beginning with 1763.csv and progressing one year at a time up to the present.</p> 
<p>From the AWS console, click on AWS Athena. This takes you to the main dashboard for Athena. From here, click on AWS Glue Data Catalog. This brings you to AWS Glue.</p> 
<p>In AWS Glue, choose the <strong>Tables</strong> section on the left side. Then, in the <strong>Add table</strong> drop-down menu, choose <strong>Add table manually</strong>. A series of forms displays for you to add the following information:</p> 
<ul> 
 <li>Set up your table’s properties: 
  <ul> 
   <li>Give the new table a name, for example, tblallyears</li> 
   <li>Create a database and name it ghcnblog.</li> 
  </ul> </li> 
</ul> 
<p>The database then appears in the Athena dashboard.</p> 
<ul> 
 <li>Add a data store: 
  <ul> 
   <li>Choose the <strong>Specified path in another account</strong> option, and enter the following path in the text box: <strong>s3://noaa-ghcn-pds/csv/</strong></li> 
  </ul> </li> 
 <li>Choose a data format: 
  <ul> 
   <li>Select <strong>CSV</strong>, then select <strong>Comma</strong> as the delimiter.</li> 
  </ul> </li> 
 <li>Define a schema: 
  <ul> 
   <li>Add the following columns as string variables: 
    <ul> 
     <li>id</li> 
     <li>year_date</li> 
     <li>element</li> 
     <li>data_value</li> 
     <li>m_flag</li> 
     <li>q_flag</li> 
     <li>s_flag</li> 
     <li>obs_time</li> 
    </ul> </li> 
  </ul> </li> 
</ul> 
<p>For a full description of the variables and data structures, see the <a href="https://docs.opendata.aws/noaa-ghcn-pds/readme.html" target="_blank" rel="noopener">readme</a> file.</p> 
<ul> 
 <li>Choose <strong>OK</strong>, then <strong>Finish</strong>.</li> 
</ul> 
<p>Now return to the Athena dashboard, and choose the database that you created. The table will appear in the list of tables on the left. You can now preview the data by choosing the ‘Preview table’ option to the right of the table.</p> 
<h3>Use CTAS to speed up queries</h3> 
<p>As a final step, create a table using the SQL statement called CREATE TABLE AS SELECT (CTAS). Store the table in a private Amazon S3 bucket.</p> 
<p>This step dramatically speeds up queries. The reason is because in this process we extract the data once and store the extracted data in a columnar format (Parquet) in the private Amazon S3 bucket.</p> 
<p>To illustrate the improvement in speed, here are two examples:</p> 
<ul> 
 <li>A query that counts all of the distinct IDs, meaning unique weather stations, takes around 55 seconds and scans around 88 GB of data.</li> 
 <li>The same query on the converted data takes around 13 seconds and scans about 5 GB of data.</li> 
</ul> 
<p>To create the table for this final step:</p> 
<ol> 
 <li>Open the Athena console.</li> 
 <li>In the dashboard, select <strong>New query</strong>, then enter the query as shown in the following example. Make sure to enter the information that’s applicable to your particular situation, such as your bucket name. 
  <div class="hide-language"> 
   <pre><code class="lang-sql">/*converting data to Parquet and storing it in a private bucket*/
CREATE table ghcnblog.tblallyears_qa
WITH (
  format='PARQUET', external_location='s3://[your-bucket-name]/ghcnblog/allyearsqa/'
) AS SELECT * FROM ghcnblog.tblallyears
WHERE q_flag = '';</code></pre> 
  </div> </li> 
 <li>Make sure that the data format is Parquet.</li> 
 <li>Name your table <strong>tblallyears_qa</strong>.</li> 
 <li>Add this path to this folder in the private Amazon S3 bucket: <strong>[your_bucket_name]/ghcnblog/allyearsqa/</strong>. Replace your_bucket_name with your specific bucket name.</li> 
</ol> 
<p>The new table appears in your database, listed on the left side of the Athena dashboard. This is the table that we work with going forward.</p> 
<h3>Extract the stations text file and add it to a separate table in Amazon Athena</h3> 
<p>The stations text file contains information about the weather stations, such as location, nationality, and ID. This data is kept in a separate file from the yearly observations. We need to import this data to look at the geographical spread of weather observations. While dealing with this file is a bit more complicated, the steps to importing this data into Athena are similar to what we have already done.</p> 
<p>To import this data into Athena:</p> 
<ol> 
 <li>Download the <a href="http://noaa-ghcn-pds.s3.amazonaws.com/ghcnd-stations.txt" target="_blank" rel="noopener">ghcnd-stations text file</a>.</li> 
 <li>Open the file in a spreadsheet program and use the fixed width-delimited data import function. The fixed widths of the columns are described in the <a href="https://docs.opendata.aws/noaa-ghcn-pds/readme.html" target="_blank" rel="noopener">readme file</a> in the section called <strong>FORMAT OF “ghcnd-stations.txt” file</strong>.</li> 
 <li>After you successfully import the data, save the spreadsheet as a .csv text file.</li> 
 <li>Copy the new .csv file to <strong>[your_bucket_name]/stations_raw/</strong>. Replace your_bucket_name with your specific bucket name.</li> 
 <li>Using this new .csv file, follow the <strong>Add table process</strong> steps in AWS Glue, as described earlier in this post. 
  <ul> 
   <li>Use the following field names: 
    <ul> 
     <li>id</li> 
     <li>latitude</li> 
     <li>longitude</li> 
     <li>elevation</li> 
     <li>state</li> 
     <li>name</li> 
     <li>gsn_flag</li> 
     <li>hcn_flag</li> 
     <li>wmo_id</li> 
    </ul> </li> 
   <li>Name the table <strong>tblghcnd_stations</strong>.</li> 
  </ul> </li> 
 <li>After the table is created, follow the CREATE TABLE AS SELECT (CTAS) steps for this table as described earlier in this post. 
  <ul> 
   <li>Name the new table <strong>tblghcnd_stations_qa</strong>.</li> 
   <li>Store the new table in [your_bucket_name]/ghcnblog/stations/. Replace your_bucket_name with your specific bucket name.</li> 
  </ul> </li> 
</ol> 
<p>The two most important datasets of GHCN_D are now in Athena.</p> 
<p>In the next section, we run queries against these tables and visualize the results using Amazon QuickSight.</p> 
<h2>Exploratory data analysis and visualization</h2> 
<p>With our two tables created, we are now ready to query and visualize to gain insight.</p> 
<h3>Exploratory data analysis</h3> 
<p>In the Athena query window, run the following queries to get an idea of the size of the dataset.</p> 
<p>Query #1: the total number of observations since 1763:</p> 
<div class="hide-language"> 
 <pre><code class="lang-sql">SELECT count(*) AS Total_Number_of_Observations
FROM ghcnblog.tblallyears_qa;</code></pre> 
</div> 
<p>Query #2: the number of stations since 1763:</p> 
<div class="hide-language"> 
 <pre><code class="lang-sql">SELECT count(*) AS Total_Number_of_Stations
FROM ghcnblog.tblghcnd_stations_qa;</code></pre> 
</div> 
<h3>Average weather parameters for the Earth</h3> 
<p>The following figure shows a query that calculates the average maximum temperature (Celsius), average minimum temperature (Celsius), and average rainfall (mm) for the Earth since 1763.</p> 
<p>In the query, we must convert the data_value from a String variable to a Real variable. We also must divide by 10, because the temperature and precipitation measurements are in tenths of their respective units. For more information about these details and the element codes (TMIB, TMAX and PRCP), see the <a href="https://docs.opendata.aws/noaa-ghcn-pds/readme.html" target="_blank" rel="noopener">readme file</a>.</p> 
<div class="hide-language"> 
 <pre><code class="lang-sql">SELECT element,
         round(avg(CAST(data_value AS real)/10),2) AS value
FROM ghcnblog.tblallyears_qa
WHERE element IN ('TMIN', 'TMAX', 'PRCP')
GROUP BY  element;</code></pre> 
</div> 
<p>It would be convenient if we could just run simple queries, such as this one, on this dataset and accept that the results are correct.</p> 
<p>The previous query is assuming an even and equal spread of weather stations around the world since 1763. In fact, the number and spread of weather stations varied over time.</p> 
<h3>Visualizing the growth in numbers of weather stations over time</h3> 
<p>The following query visualizes the number of weather stations for each year since 1763, by using <a href="https://docs.aws.amazon.com/quicksight/latest/user/welcome.html" target="_blank" rel="noopener">Amazon QuickSight</a>.</p> 
<p><strong>Note: </strong>You must be signed up for Amazon QuickSight to complete these steps. During the sign-up process, you are prompted to manage your Amazon QuickSight data source permissions. At this time, use step 3 in the following procedure to grant access to the Amazon S3 buckets and to Athena.</p> 
<p>The steps are as follows:</p> 
<ol> 
 <li>Open the Amazon QuickSight console.</li> 
 <li>On the far right of the dashboard, choose <strong>Manage QuickSight</strong>.</li> 
 <li>Choose <strong>Account Setting</strong>, then <strong>Manage QuickSight permissions</strong>. Give Amazon QuickSight permission to access Athena, and to read the Amazon S3 bucket that contains the new tables.</li> 
 <li>Return to Amazon QuickSight by choosing the logo on the top left side of the screen.</li> 
 <li>From the Amazon QuickSight dashboard, choose <strong>New analysis</strong>, then <strong>New data set</strong>.</li> 
 <li>From the <strong>Create a Data Set</strong> tiles, choose <strong>Athena</strong>. Name the data source, for example ghcnblog, then choose <strong>Create data source</strong>.</li> 
 <li>Choose the option to add a custom SQL, then add the SQL, as shown in the following example:</li> 
</ol> 
<div class="hide-language"> 
 <pre style="padding-left: 30px"><code class="lang-sql">SELECT DISTINCT id AS numberofstations,
substr(year_date,1,4) as year
FROM ghcnblog.tblallyears_qa
GROUP BY substr(year_date,1,4), id
ORDER BY substr(year_date,1,4)</code></pre> 
</div> 
<ol start="8"> 
 <li>Choose <strong>Confirm query</strong>.</li> 
 <li>Choose <strong>Directly query your data</strong>.</li> 
 <li>Choose <strong>Visualize</strong>.</li> 
 <li>To make the graph, choose the line chart graph. Add <strong>year</strong> to the X-axis and <strong>number_of_stations</strong> to the Value field wells. The options appear to the left of the visualization dashboard.<img class="alignnone size-full wp-image-6469" style="margin: 20px 0px 20px 0px;border: 1px solid #cccccc" src="https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2019/02/07/VisualizeClimateDataAthenaQuickSight8.png" alt="" width="800" height="487" /></li> 
</ol> 
<p style="padding-left: 30px"><em>The number of global weather stations used by GHCN_D over time.</em></p> 
<p>The resulting graph shows that the number and spread of stations around the world has varied over time.</p> 
<h3>A look at the development of observation in the US</h3> 
<p>1836 is the year of the first US observation station in the data set. To get an insight into the development of observations the US, we extracted a subset of US data from the main data source (tblallyears_qa). This dataset features annual data every 30<sup>th</sup> year from 1836 to 2016.</p> 
<p>This query generates a large dataset. To improve performance, save the query as a table stored in an Amazon S3 bucket using the previously described procedure.</p> 
<p>The query to do this in one step is shown in the following figure.</p> 
<div class="hide-language"> 
 <pre><code class="lang-sql">CREATE TABLE ghcnblog.tbl1836every30thyear
WITH (
  format='PARQUET',
  external_location='s3://[your-bucket-name]/ghcnblog/1836every30years/'
) AS
SELECT TA.id as id, substr(TA.year_date,1,4) as year, TS.state, CAST(TS.longitude as real) as longitde, CAST(TS.latitude as real) as latitude, element, CAST(data_value as real) as data_value
FROM &quot;ghcnblog&quot;.tblallyears_qa as TA, &quot;ghcnblog&quot;.tblghcnd_stations_qa as TS
WHERE substr(TA.year_date,1,4) IN ('1836', '1866', '1896', '1926', '1956', '1986', '2016')
AND substr(TA.id,1,2) = 'US'
AND state &lt;&gt; 'PI'
AND TRIM(TA.id) = TRIM(TS.id)
GROUP BY TA.id, substr(TA.year_date,1,4), state, longitude, latitude, element, data_value;</code></pre> 
</div> 
<p>The table appears in the Amazon Athena dashboard as <strong>tbl1836every30thyear</strong> and it forms the basis for our analysis.</p> 
<p>In the Amazon QuickSight console, use the follow SQL to generate a new dataset.</p> 
<div class="hide-language"> 
 <pre><code class="lang-sql">SELECT DISTINCT(id) AS number_of_stations, year, state
FROM ghcnblog.tbl1836every30thyear
GROUP BY year, id, state
ORDER BY year</code></pre> 
</div> 
<ol> 
 <li>Choose <strong>Confirm query</strong>.</li> 
 <li>Choose <strong>Directly query your data</strong>.</li> 
 <li>Choose <strong>Visualize</strong>.</li> 
</ol> 
<p>This brings you back to the visualization dashboard. From this dashboard, chose the <strong>Points on a map</strong> visualization, and set up the fields as follows:</p> 
<ul> 
 <li><strong>Geospatial</strong>: state</li> 
 <li><strong>Size</strong>: number_of_stations, aggregate by count.</li> 
 <li><strong>Color</strong>: year</li> 
</ul> 
<p>The results should be the following map of the US showing the growth of weather stations used by GHCN_D from 1836 to 2016 at 30-year increments. In 1836, there was one station. By 2016, there were thousands.</p> 
<p><img class="alignnone size-full wp-image-6472" style="margin: 20px 0px 20px 0px;border: 1px solid #cccccc" src="https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2019/02/07/VisualizeClimateDataAthenaQuickSight11.png" alt="" width="800" height="390" /></p> 
<p><em>The growth of the number of observations stations in the US.</em></p> 
<p>Interestingly, some states had more stations in 1956 than they did in 1986. This is also illustrated in the following figure. The data for the figure was derived from the previous dataset.</p> 
<p><img class="alignnone size-full wp-image-6473" style="margin: 20px 0px 20px 0px;border: 1px solid #cccccc" src="https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2019/02/07/VisualizeClimateDataAthenaQuickSight12.png" alt="" width="800" height="405" /></p> 
<p><em>This heat map illustrates the number of stations per state over time. This is a 30th year snapshot.</em></p> 
<h3>A look at more data</h3> 
<p>We have now a data lake of GHN_D data. By using the tools that we have assembled, we are free to experiment with the data. It is now possible to construct queries and visualization on this huge dataset to gain insights.</p> 
<p>The following figure shows the heat map that we created. It shows the average minimum temperature in US states over time. As before, we are looking at 30-year snapshots; that is to say, every 30th year we take a yearly average.</p> 
<p><img class="alignnone size-full wp-image-6474" style="margin: 20px 0px 20px 0px;border: 1px solid #cccccc" src="https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2019/02/07/VisualizeClimateDataAthenaQuickSight13.png" alt="" width="800" height="388" /></p> 
<p><em>This heat map illustrates the minimum temperate for each state over time. A yearly average every 30th year starting at 1836.</em></p> 
<h2>Summary</h2> 
<p>Our headlines are full of Climate Change and Sustainability stories, and research and analysis has become more crucial than ever.</p> 
<p>We showed researchers, analysts, and scientists how AWS services have reduced the level of technical skills required to fully use the GHCN_D dataset.</p> 
<p>This GHCN-D is available on AWS. The details can be found on the <a href="https://registry.opendata.aws/noaa-ghcn/" target="_blank" rel="noopener">Registry of Open Data</a> on AWS. This data is available to researchers studying climate change and weather impacts.</p> 
<p>This blog post demonstrated a typical workflow that a researcher could use to engage with and analyze this important data by using Amazon Athena, AWS Glue, and Amazon S3, and how they can visualize insights by using Amazon QuickSight.</p> 
<p>By making this data available, Amazon has removed the heavy lifting that was traditionally required to work with the GHCN_D, thus expanding the opportunity for new research and new discoveries.</p> 
<p>&nbsp;</p> 
<hr /> 
<h3>About the Authors</h3> 
<p><img class="size-full wp-image-6487 alignleft" src="https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2019/02/11/JFlasher.png" alt="" width="113" height="146" /><strong>Joe Flasher is the Open Geospatial Data Lead at Amazon Web Services</strong>, helping organizations most effectively make data available for analysis in the cloud. Joe has been working with geospatial data and open source projects for the past decade, both as a contributor and maintainer. He has been a member of the Landsat Advisory Group, and has worked on projects, ranging from building GIS software to making the space shuttle fly. Joe’s background is in astrophysics, but he kindly requests you don’t ask him any questions about constellations.</p> 
<p>&nbsp;</p> 
<p>&nbsp;</p> 
<p><img class="size-full wp-image-6488 alignleft" src="https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2019/02/11/ConorDel.png" alt="" width="113" height="146" /><strong>Conor Delaney, PhD. is an environmental data scientist.</strong></p>