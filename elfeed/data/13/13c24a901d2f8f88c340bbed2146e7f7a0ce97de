<p style="text-align: left;"><span style="font-weight: 400; font-style: normal;">There are many tutorials and guides available for getting started with <a href="https://www.docker.com/products/kubernetes">Kubernetes</a>. Typically, these detail the key concepts and  outline the steps for deploying your first Kubernetes cluster. However, when organizations want to roll out Kubernetes at scale or in production, the deployment is much more complex and there are a new set of requirements around both the initial setup and configuration and the ongoing management &#8211; often referred to as “Day 1 and Day 2 operations.”</span></p>
<p style="text-align: left;"><img data-attachment-id="23193" data-permalink="https://blog.docker.com/2019/05/kubernetes-lifecycle-management-with-docker-kubernetes-service-dks/e7a276bc-6806-4e66-91a5-ce8b38795f69-jpg/" data-orig-file="https://i0.wp.com/blog.docker.com/wp-content/uploads/2019/05/e7a276bc-6806-4e66-91a5-ce8b38795f69.jpg?fit=998%2C562&amp;ssl=1" data-orig-size="998,562" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="e7a276bc-6806-4e66-91a5-ce8b38795f69.jpg" data-image-description="" data-medium-file="https://i0.wp.com/blog.docker.com/wp-content/uploads/2019/05/e7a276bc-6806-4e66-91a5-ce8b38795f69.jpg?fit=533%2C300&amp;ssl=1" data-large-file="https://i0.wp.com/blog.docker.com/wp-content/uploads/2019/05/e7a276bc-6806-4e66-91a5-ce8b38795f69.jpg?fit=998%2C562&amp;ssl=1" class="alignnone size-medium wp-image-23193" src="https://i0.wp.com/blog.docker.com/wp-content/uploads/2019/05/e7a276bc-6806-4e66-91a5-ce8b38795f69.jpg?resize=533%2C300&#038;ssl=1" alt="" width="533" height="300" srcset="https://i0.wp.com/blog.docker.com/wp-content/uploads/2019/05/e7a276bc-6806-4e66-91a5-ce8b38795f69.jpg?resize=533%2C300&amp;ssl=1 533w, https://i0.wp.com/blog.docker.com/wp-content/uploads/2019/05/e7a276bc-6806-4e66-91a5-ce8b38795f69.jpg?w=998&amp;ssl=1 998w" sizes="(max-width: 533px) 100vw, 533px" data-recalc-dims="1" /></p>
<p style="text-align: left;"><a href="https://www.docker.com/products/docker-enterprise">Docker Enterprise 3.0,</a> the leading container platform, includes <a href="https://blog.docker.com/2019/05/introducing-docker-kubernetes-service/">Docker Kubernetes Service (DKS)</a><span style="font-weight: 400; font-style: normal;"> &#8211; a seamless Kubernetes experience from developers’ desktops to production servers. DKS makes it simple for enterprises to secure and manage their Kubernetes environment by abstracting away many of these complexities. With Docker Enterprise, operations teams can easily deploy, scale, backup and restore, and upgrade a certified Kubernetes environment using a set of simple CLI commands. In this blog post, we’ll highlight some of these new features.</span></p>
<h4 id="h.h0qehv39p9g" style="text-align: left;"><span style="font-weight: 400; font-style: normal;">A Declarative Kubernetes Cluster Model</span></h4>
<p style="text-align: left;"><span style="font-weight: 400; font-style: normal;">A real Kubernetes cluster deployment will typically involve design and planning to ensure that the environment integrates with an organization’s preferred infrastructure, storage and networking stacks. The design process usually requires cross-functional expertise to determine the instance size, disk space, the load balancer design, and many other factors that will be custom to your particular needs.</span></p>
<p style="text-align: left;">To help simplify the deployment, Docker has created a CLI plugin for simplified Docker cluster operations. It’s based on <a href="https://success.docker.com/architectures">Docker Certified Infrastructure</a><span style="font-weight: 400; font-style: normal;"> that was launched last year for AWS, Azure, and vSphere environments. It’s now an automated tool using a declarative model so you can “source control” your cluster configurations with a cluster YAML file with the following structure:</span></p>
<pre><span style="font-weight: bold; font-style: normal;">variable:</span>
<span style="font-weight: 400; font-style: normal;">        &lt;name&gt;:</span>

<span style="font-weight: bold;">provider: </span>
<span style="font-weight: 400; font-style: normal;">        &lt;name&gt;:</span>
<span style="font-weight: 400; font-style: normal;">                &lt;parameter&gt;:</span>

<span style="font-weight: bold; font-style: normal;">cluster:</span>
<span style="font-weight: 400; font-style: normal;">        &lt;component&gt;:</span>
<span style="font-weight: 400; font-style: normal;">                &lt;parameter&gt;:</span>

<span style="font-weight: bold; font-style: normal;">resource:</span>
<span style="font-weight: 400; font-style: normal;">       &lt;type&gt;:</span>
<span style="font-weight: 400; font-style: normal;">                &lt;name&gt;:</span>
<span style="font-weight: 400;">                        &lt;parameter&gt;:</span></pre>
<p style="text-align: left;"><span style="font-weight: 400; font-style: normal;">The file defines your configuration settings, including the instance types, Docker Enterprise versions which reflect different Kubernetes versions, the OS used, networking setup and more. Once defined, this file can be used with the new ‘docker cluster’ CLI commands: </span></p>
<p style="text-align: left;"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 334.67px;"><img style="width: 624.00px; height: 334.67px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title="" src="https://i2.wp.com/blog.docker.com/wp-content/uploads/2019/05/2bc04274-3cd1-4b57-9c6d-5dbcc566eb3d-1.jpg?ssl=1" alt="" data-recalc-dims="1" /></span></p>
<h4 id="h.l4qvivp2n36f" style="text-align: left;"><span style="font-weight: 400; font-style: normal;">Create &amp; Inspect</span></h4>
<p style="text-align: left;"><span style="font-weight: 400; font-style: normal;">Once a cluster YAML is defined, it can be used to create and clone environments with the same desired configurations. This makes it simple to set up identical staging and production environments and to move between them using the new context switching features of Docker Enterprise. With Docker Enterprise, the Kubernetes managers and workers are automatically installed with all of the necessary components and we also include built-in “batteries included” CNI plugin with Calico:</span></p>
<p style="text-align: left;"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 320.00px;"><img style="width: 624.00px; height: 320.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title="" src="https://i1.wp.com/blog.docker.com/wp-content/uploads/2019/05/203797a6-ceb1-455c-9aa2-f87de0066961.jpg?ssl=1" alt="" data-recalc-dims="1" /></span></p>
<p style="text-align: left;"><span style="font-weight: 400; font-style: normal;">You can also inspect the cluster you are looking at to view the settings from which it is deployed. </span></p>
<h4 id="h.ebqhv5bc5vql" style="text-align: left;"><span style="font-weight: 400; font-style: normal;">Simple Day 2 Operations</span></h4>
<p style="text-align: left;"><span style="font-weight: 400; font-style: normal;">One of the more challenging facets of managing your own Kubernetes infrastructure is upgrades and backups. In a manual deployment, each of the components would need to be upgraded on its own and scripts would be necessary to help automate this. With Docker Enterprise, these are incredibly simple.</span></p>
<h4 id="h.8m40lirrsf3u" style="text-align: left;"><span style="font-weight: 400; font-style: normal;">Update</span></h4>
<p style="text-align: left;"><span style="font-weight: 400; font-style: normal;">Changes to your environment are simple with ‘docker cluster update’. Using the declarative model, you can now change, for example, a version number in your configuration file. The CLI plugin will identify the change and implement a safe upgrade of that particular component. This helps with upgrading the engine, Universal Control Plane, and Docker Trusted Registry using a single command by utilizing a simple configuration file.</span></p>
<p style="text-align: left;">`docker cluster` also takes advantage of a new Docker Enterprise 3.0 enhancement which supports upgrading the cluster without any downtime using a blue-green deployment model for worker nodes.<span style="font-weight: 400; font-style: normal;"> Instead of upgrading worker node engines in-place, a new set of worker nodes may also be joined to the cluster with the latest engine to upgrade worker nodes in a blue-green fashion. This allows you to migrate an application from older “green” nodes to newer “blue” nodes that have joined the cluster without downtime. </span></p>
<h4 id="h.7uw55lozwa7l" style="text-align: left;"><span style="font-weight: 400; font-style: normal;">Backup &amp; Restore</span></h4>
<p style="text-align: left;"><span style="font-weight: 400; font-style: normal;">The ‘docker cluster backup’ command stores your cluster environment as a single tarball file that can be stored in your desired location. You can optionally encrypt that back up and then easily restore a cluster from that backup.</span></p>
<p style="text-align: left;"><span style="font-weight: 400; font-style: normal;"></p>
<hr />
<p><em>With #Docker Enterprise, operations teams can easily deploy, scale, backup and restore, and upgrade a certified #Kubernetes environment using a set of simple CLI commands. Check out these new features to help you get started:</em><br /><a href='https://twitter.com/share?text=With+%23Docker+Enterprise%2C+operations+teams+can+easily+deploy%2C+scale%2C+backup+and+restore%2C+and+upgrade+a+certified+%23Kubernetes+environment+using+a+set+of+simple+CLI+commands.+Check+out+these+new+features+to+help+you+get+started%3A&#038;via=docker&#038;related=docker&#038;url=https://blog.docker.com/2019/05/kubernetes-lifecycle-management-with-docker-kubernetes-service-dks/' target='_blank'>Click To Tweet</a></p>
<hr /></span></p>
<p style="text-align: left;"><span style="font-weight: 400; font-style: normal;">To learn more about Docker Kubernetes Service in Docker Enterprise 3.0</span></p>
<ul>
<li style="text-align: left;">Watch the DockerCon talk:<a href="https://www.docker.com/dockercon/2019-videos?watch=lifecycle-management-of-docker-clusters"> Lifecycle Management of Docker Clusters</a></li>
<li style="text-align: left;">Watch the OnDemand webinar: <a href="https://goto.docker.com/webinar-how-docker-simplifies-kubernetes-for-the-masses.html">How Docker Simplifies Kubernetes for the Masses</a></li>
<li style="text-align: left;">Get access to the <a href="https://beta.docker.com">Docker Enterprise 3.0 beta</a></li>
</ul>
<p>The post <a rel="nofollow" href="https://blog.docker.com/2019/05/kubernetes-lifecycle-management-with-docker-kubernetes-service-dks/">Kubernetes Lifecycle Management with Docker Kubernetes Service (DKS)</a> appeared first on <a rel="nofollow" href="https://blog.docker.com">Docker Blog</a>.</p>
